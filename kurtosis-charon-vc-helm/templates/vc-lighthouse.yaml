{{- range .Values.NODES }}
{{- if eq (int .VC_TYPE) 1 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vc{{ .index }}-lighthouse
  name: vc{{ .index }}-lighthouse
  namespace: {{ $.Values.CLUSTER_NAME }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vc{{ .index }}-lighthouse
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: vc{{ .index }}-lighthouse
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      imagePullSecrets:
        - name: docker-registry
      initContainers:
        - name: init-data-dir
          image: busybox
          command: ['sh', '-c', 'mkdir -p /opt/lighthouse/network-configs /data/lighthouse && chown -R 1000:1000 /opt/lighthouse /data/lighthouse']
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: "/data/lighthouse"
            - name: network-config
              mountPath: "/opt/lighthouse/network-configs"
        - name: download-config
          image: amazon/aws-cli:latest
          securityContext:
            runAsUser: 0
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: AWS_SESSION_TOKEN
          command:
            - sh
            - -ac
            - >
              echo "Starting S3 copy..." &&
              aws s3 cp --recursive s3://charon-clusters-config/{{ $.Values.CLUSTER_NAME }}/node{{ .index }}/validator_keys /data/lighthouse/validator_keys;
              aws s3 cp s3://charon-clusters-config/{{ $.Values.CLUSTER_NAME }}/lighthouse-validators-definitions/vc-node-{{ .index }}.yaml /data/lighthouse/validator_definitions.yml;
              chown -R 1000:1000 /data/lighthouse;
              echo "S3 copy completed"l
              ls -la /opt/lighthouse/network-configs/;
              ls -la /data/lighthouse/;
              echo "Copying testnet files...";
              aws s3 ls s3://charon-clusters-config/{{ $.Values.CLUSTER_NAME }}/testnet/;
              aws s3 cp --recursive s3://charon-clusters-config/{{ $.Values.CLUSTER_NAME }}/testnet/ /opt/lighthouse/network-configs/;
              echo "S3 copy completed";
              echo "Contents of /opt/lighthouse/network-configs:";
              ls -la /opt/lighthouse/network-configs/;
          volumeMounts:
            - name: data
              mountPath: "/data/lighthouse"
            - name: network-config
              mountPath: "/opt/lighthouse/network-configs"
      containers:
        - name: vc{{ .index }}-lighthouse
          image: sigp/lighthouse:{{ .VC_VERSION }}
          imagePullPolicy: Always
          command:
            - sh
            - -ace
            - |
              lighthouse vc \
                --http \
                --http-address "0.0.0.0" \
                --http-port "5052" \
                --http-allow-origin "*" \
                --unencrypted-http-transport \
                --beacon-nodes "http://node{{ .index }}:3600" \
                --init-slashing-protection \
                --metrics \
                --metrics-address "0.0.0.0" \
                --metrics-allow-origin "*" \
                --metrics-port "5064" \
                --use-long-timeouts \
                --testnet-dir "/opt/lighthouse/network-configs" \
                --validators-dir=/data/lighthouse \
                --builder-proposals \
                --distributed \
                --graffiti "Obol DVT"
          ports:
            - containerPort: 5064
              name: metrics
          volumeMounts:
            - name: data
              mountPath: "/data/lighthouse"
            - name: network-config
              mountPath: "/opt/lighthouse/network-configs"
      volumes:
        - name: data
          emptyDir: {}
        - name: network-config
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: vc{{ .index }}-lighthouse
  namespace: {{ $.Values.CLUSTER_NAME }}
  labels:
    app: vc{{ .index }}-lighthouse
spec:
  selector:
    app: vc{{ .index }}-lighthouse
  ports:
    - name: metrics
      protocol: TCP
      port: 5064
      targetPort: metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: vc{{ .index }}-lighthouse
  namespace: {{ $.Values.CLUSTER_NAME }}
  labels:
    app: vc{{ .index }}-lighthouse
spec:
  selector:
    matchLabels:
      app: vc{{ .index }}-lighthouse
  endpoints:
    - port: metrics
      path: /metrics
      interval: 10s
{{- end }}
{{- end }}
