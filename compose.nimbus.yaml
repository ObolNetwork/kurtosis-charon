name: kurtosis-charon

x-nimbus-base: &nimbus-base
  build:
    context: nimbus
    args:
      VERSION: ${VC_VERSION}
  networks: [network1]
  restart: unless-stopped
  user: "${DUID:-}:${DGID:-}" # Used by docker-in-docker as it's based on linux

x-nimbus-volume-run: &nimbus-volume-run ./nimbus/run.sh:/home/user/data/run.sh

services:
  vc0-nimbus:
    <<: *nimbus-base
    depends_on: [node0]
    environment:
      NODE: node0
    volumes:
      - *nimbus-volume-run
      - .charon/cluster/node0/validator_keys:/home/validator_keys
      - ./data/nimbus/vc0:/home/user/data/node0

  vc1-nimbus:
    <<: *nimbus-base
    depends_on: [node1]
    environment:
      NODE: node1
    volumes:
      - *nimbus-volume-run
      - .charon/cluster/node1/validator_keys:/home/validator_keys
      - ./data/nimbus/vc1:/home/user/data/node1

  vc2-nimbus:
    <<: *nimbus-base
    depends_on: [node2]
    environment:
      NODE: node2
    volumes:
      - *nimbus-volume-run
      - .charon/cluster/node2/validator_keys:/home/validator_keys
      - ./data/nimbus/vc2:/home/user/data/node2

networks:
  network1:
    name: ${NETWORK_NAME}
    external: true
